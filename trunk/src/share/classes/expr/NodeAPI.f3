package expr;
import f3.math.*;
import f3.media.scene.*;

public interface NodeAPI {
    public function setTranslation from (point is Point3) to (); 
    public function setScale from (t is Tuple3) to ();
    public function setPivot from (point is Point3) to (); 
    public function setRotation from (t is Tuple3) to (); 
    // translation
    public var tx is Number;
    public var ty is Number;
    public var tz is Number;
    // rotation
    public var rx is Number;
    public var ry is Number;
    public var rz is Number;
    // scale
    public var sx is Number = 1.0;
    public var sy is Number = 1.0;
    public var sz is Number = 1.0;
    // rotation/scale pivot
    public var px is Number;
    public var py is Number;
    public var pz is Number;
    public readonly var visibleInScene is Boolean;
    public var visible is Boolean;
    public function getScene to Scene;

    public var toSceneTransform is Mat4;

    public function applyForce from (v is Vec3) to () { applyForce(v.x, v.y, v.z) }
    public function applyForce from (x is Number, y is Number, z is Number) to ();
    public function applyTorque from (v is Vec3) to () { applyTorque(v.x, v.y, v.z) }
    public function applyTorque from (x is Number, y is Number, z is Number) to (); 
    public function getLinearVelocity from () to Vec3; 
    public function getAngularVelocity from () to Vec3; 
    public function setLinearVelocity from (v is Vec3) to () { setLinearVelocity(v.x, v.y, v.z) }
    public function setLinearVelocity from (x is Number, y is Number, z is Number) to (); 
    public function setAngularVelocity from (v is Vec3) to () { setAngularVelocity(v.x, v.y, v.z) } 
    public function setAngularVelocity from (x is Number, y is Number, z is Number) to (); 
    public function applyImpulse from (v is Vec3) to () { applyImpulse(v.x, v.y, v.z) }
    public function applyImpulse from (x is Number, y is Number, z is Number) to (); 
    public function applyTarqueImpulse from (v is Vec3) to () { applyTorqueImpulse(v.x, v.y, v.z) }
    public function applyTorqueImpulse from (x is Number, y is Number, z is Number) to ();


}